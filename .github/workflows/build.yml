name: Build and deploy

env:
  APPLICATION_NAME: full-time
  FORCE_COLOR: 1
  environment_name: develop
  REACT_APP_BASE_URL: ${{ vars.BASE_URL }}

#
on:
  push:
    branches:
      - develop
      - main

  workflow_dispatch:

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare workspace
        uses: ./.github/workflows/actions/prepare-workspace
        with:
          aws_access_key_id: ${{ secrets.ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.SECRET_ACCESS_KEY }}

      - name: Prepare Terraform workspace
        uses: ./.github/workflows/actions/prepare-terraform

      - name: Get infrastructure changes
        id: terraform-plan
        shell: bash
        run: |
          chalk blue bold "Updating Terraform state"
          cd ./terraform

          export TF_VAR_aws_region=us-east-1
          export TF_VAR_app_name_node=${{ env.APPLICATION_NAME }}
          export TF_VAR_description_app=${{ env.APPLICATION_NAME }}
          export TF_VAR_elastic_beanstalk_tags='{"Name" = "${{ env.APPLICATION_NAME }}" }'
          export TF_VAR_tags='{"Environment" = "${{ env.environment_name }}", "Client" = "Full-Time-Force" }'
          terraform apply -var-file="develop.tfvars" --auto-approve

      - name: Upload Terraform plan output
        uses: actions/upload-artifact@master
        with:
          name: plan-output
          path: ./terraform/${{ steps.terraform-plan.outputs.plan_output }}

  build:
    name: Build application
    runs-on: ubuntu-latest
    needs: [terraform-plan]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare workspace
        uses: ./.github/workflows/actions/prepare-workspace
        with:
          aws_access_key_id: ${{ secrets.ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.SECRET_ACCESS_KEY }}

      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - name: Generate deployment package
        working-directory: backend
        run: zip -r deploy.zip * .[^.]* -x "**node_modules**" "**.git**" "**.eslintrc**" ".env.example" "README.md"

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: "-"
          flags: "g"

      - name: Beanstalk Deploy for app
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{secrets.ACCESS_KEY_ID}}
          aws_secret_key: ${{secrets.SECRET_ACCESS_KEY}}
          application_name: ${{ env.APPLICATION_NAME }}
          environment_name: ${{ env.APPLICATION_NAME }}Env
          region: us-east-1
          version_label: "${{ env.APPLICATION_NAME }}-${{ steps.format-time.outputs.replaced }}"
          deployment_package: ./backend/deploy.zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Run a multi-line script
        working-directory: frontend
        run: |
          npm install --legacy-peer-deps
          npm run build
        env:
          CI: ""

      - name: Deploy
        working-directory: frontend
        run: aws s3 sync ./build s3://front-full-time-test

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: E3NJ4QJIH9HSAC
          PATHS: "/*"
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}

      - name: Backend Deployed!
        run: echo App deployed to Elastic Beanstalk
